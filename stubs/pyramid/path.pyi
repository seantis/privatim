from types import ModuleType
from typing import Any, Final, TypeVar, overload

_T = TypeVar("_T")

class _CALLER_PACKAGE: ...
CALLER_PACKAGE: Final[_CALLER_PACKAGE]

class Resolver:
    package: ModuleType | _CALLER_PACKAGE
    def __init__(self, package: ModuleType | _CALLER_PACKAGE | str = ...) -> None: ...
    def get_package_name(self) -> str: ...
    def get_package(self) -> ModuleType: ...

class DottedNameResolver:
    def resolve(self, dotted: str) -> Any: ...
    @overload
    def maybe_resolve(self, dotted: str) -> Any: ...
    @overload
    def maybe_resolve(self, dotted: _T) -> _T: ...
