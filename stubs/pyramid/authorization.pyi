from collections.abc import Iterator
from typing import Final, Literal

from pyramid.security import Allowed, Denied, ACLPermitsResult

Everyone: Final = "system.Everyone"
Authenticated: Final = "system.Authenticated"
Allow: Final = "Allow"
Deny: Final = "Deny"

class _AllPermissionsList:
    def __iter__(self) -> Iterator[str]: ...
    def __contains__(self, other: object) -> bool: ...
    def __eq__(self, other: object) -> bool: ...

class AllPermissionsList(_AllPermissionsList): ...

ALL_PERMISSIONS: Final[AllPermissionsList]
DENY_ALL: Final[tuple[Literal["Deny"], Literal["system.Everyone"], AllPermissionsList]]

class _ACLDenied(ACLPermitsResult, Denied): ...
class ACLDenied(_ACLDenied): ...
class _ACLAllowed(ACLPermitsResult, Allowed): ...
class ACLAllowed(_ACLAllowed): ...
